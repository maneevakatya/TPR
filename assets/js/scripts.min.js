/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
$(document).ready(function(){$("body").on("click",".nav a",function(e){e.preventDefault();var t=$(this).attr("href"),s=$(t).offset().top;$("html, body").animate({scrollTop:s-50},1500),$(window).width()<=768&&($(".header").slideToggle(),$(".burger-menu").toggleClass("is-active"),$("body").toggleClass("ovh"))}),$(".burger-menu").click(function(){$(this).toggleClass("is-active"),$(".header").slideToggle(),$("body").toggleClass("ovh")}),window.sf={},window.sf.form={init:function(){var t=this;$(".js-phone").keydown(function(e){-1!==$.inArray(e.keyCode,[46,8,9,27,13,110,190])||65==e.keyCode&&(!0===e.ctrlKey||!0===e.metaKey)||35<=e.keyCode&&e.keyCode<=40||(e.shiftKey||e.keyCode<48||57<e.keyCode)&&(e.keyCode<96||105<e.keyCode)&&e.preventDefault()}),$(".js-phone").inputmask("+7 (999) 999 - 99 - 99",{placeholder:" ",showMaskOnHover:!1,showMaskOnFocus:!1}),$(".feedback__form").submit(function(e){if(!t.checkForm($(this)))return!1})},checkForm:function(e){var t=!0;return e.find(".warning").removeClass("warning"),e.find("input, textarea, select").each(function(){if($(this).data("req"))switch($(this).data("type")){case"email":/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i.test($(this).val())||($(this).addClass("warning"),t=!1);break;case"mobile":$.trim($(this).val()).length<22&&($(this).addClass("warning"),t=!1);break;default:""===$.trim($(this).val())&&($(this).addClass("warning"),t=!1)}}),t}}.init(),window.sf.contacts={bindEvents:function(){var e=[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f2f2f2"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"on"}]},{featureType:"poi",elementType:"geometry.fill",stylers:[{saturation:"-100"},{lightness:"57"}]},{featureType:"poi",elementType:"geometry.stroke",stylers:[{lightness:"1"}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45},{visibility:"simplified"}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"transit.station.bus",elementType:"all",stylers:[{visibility:"on"}]},{featureType:"transit.station.bus",elementType:"labels.text.fill",stylers:[{saturation:"0"},{lightness:"0"},{gamma:"1.00"},{weight:"1"}]},{featureType:"transit.station.bus",elementType:"labels.icon",stylers:[{saturation:"-100"},{weight:"1"},{lightness:"0"}]},{featureType:"transit.station.rail",elementType:"all",stylers:[{visibility:"on"}]},{featureType:"transit.station.rail",elementType:"labels.text.fill",stylers:[{gamma:"1"},{lightness:"40"}]},{featureType:"transit.station.rail",elementType:"labels.icon",stylers:[{saturation:"-100"},{lightness:"30"}]},{featureType:"water",elementType:"all",stylers:[{color:"#d2d2d2"},{visibility:"on"}]}],t=(new google.maps.StyledMapType(e,{name:"Styled Map"}),{zoom:17,scrollwheel:!1,center:"",styles:e,mapTypeControlOptions:{mapTypeIds:[google.maps.MapTypeId.ROADMAP,"map_style"]},zoomControlOptions:{position:google.maps.ControlPosition.LEFT_BOTTOM},streetViewControlOptions:{position:google.maps.ControlPosition.LEFT_BOTTOM}});t.center=new google.maps.LatLng(55.766273,37.67652),map=new google.maps.Map(document.getElementById("contactsmap"),t);var s=new google.maps.LatLng(55.766273,37.67652);new google.maps.Marker({position:s,map:map,icon:"/assets/img/pin.png"})},init:function(){$("#contactsmap").length&&this.bindEvents()}}.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
